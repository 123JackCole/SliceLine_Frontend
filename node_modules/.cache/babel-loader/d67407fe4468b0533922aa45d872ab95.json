{"ast":null,"code":"var _jsxFileName = \"/Users/test/Development/Mod-4-proj/SliceLine_Frontend/src/components/MainForm.js\";\nimport React, { Component } from 'react';\nimport SauceForm from './SauceForm';\nimport CheeseForm from './CheeseForm';\nimport ToppingForm from './ToppingForm';\nimport GourmetToppingForm from './GourmetToppingForm';\nimport SizeForm from './SizeForm';\nconst DEFAULT_STATE = {\n  sauce: '',\n  cheese: '',\n  toppings: [],\n  gourmet_toppings: [],\n  size: ''\n};\n\nclass MainForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: this.props.id,\n      ...DEFAULT_STATE\n    };\n\n    this.handleChange = event => {\n      const itemType = event.target.name;\n      const item = event.target.value;\n      let value = this.state[`${itemType}`];\n\n      if (value === item) {\n        value = '';\n      } else if (value.includes(item)) {\n        value = value.filter(element => element !== item);\n      } else {\n        Array.isArray(value) ? value.push(item) : value = item;\n      }\n\n      this.setState({\n        [`${itemType}`]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      document.getElementById(\"order-form\").reset();\n      this.props.addToOrder(this.state); // this.setState({\n      //  ...DEFAULT_STATE\n      // })\n    };\n\n    this.fillForm = (element, type) => {\n      let status;\n\n      if (Array.isArray(this.state[type])) {\n        status = this.state[type].includes(element);\n      } else {\n        status = this.state[type] === element;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ui checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        id: element,\n        type: \"checkbox\",\n        value: element,\n        name: type,\n        checked: status,\n        onChange: e => this.handleChange(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        src: require(`../images/cheese/cheese.png`),\n        height: \"100px\",\n        width: \"100px\",\n        alt: element,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: element,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, element)));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui raised container segment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"ui block header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, \"Create a Pizza\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"ui form\",\n      id: \"order-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SizeForm, {\n      size: this.state.size,\n      fillForm: this.fillForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(SauceForm, {\n      sauce: this.state.sauce,\n      fillForm: this.fillForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CheeseForm, {\n      cheese: this.state.cheese,\n      fillForm: this.fillForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ToppingForm, {\n      toppings: this.state.toppings,\n      fillForm: this.fillForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(GourmetToppingForm, {\n      gourmet_toppings: this.state.gourmet_toppings,\n      fillForm: this.fillForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui blue big button\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, \"Add Pizza\")));\n  }\n\n}\n\nexport default MainForm;","map":{"version":3,"sources":["/Users/test/Development/Mod-4-proj/SliceLine_Frontend/src/components/MainForm.js"],"names":["React","Component","SauceForm","CheeseForm","ToppingForm","GourmetToppingForm","SizeForm","DEFAULT_STATE","sauce","cheese","toppings","gourmet_toppings","size","MainForm","state","id","props","handleChange","event","itemType","target","name","item","value","includes","filter","element","Array","isArray","push","setState","handleSubmit","preventDefault","document","getElementById","reset","addToOrder","fillForm","type","status","e","require","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport SauceForm from './SauceForm'\nimport CheeseForm from './CheeseForm'\nimport ToppingForm from './ToppingForm'\nimport GourmetToppingForm from './GourmetToppingForm'\nimport SizeForm from './SizeForm'\n\nconst DEFAULT_STATE = {\n  sauce: '',\n  cheese: '',\n  toppings: [],\n  gourmet_toppings: [],\n  size: ''\n}\n\nclass MainForm extends Component {\n  state = {\n    id: this.props.id,\n    ...DEFAULT_STATE\n  }\n\n  handleChange = (event) => {\n\n    const itemType = event.target.name;\n    const item = event.target.value;\n    let value = this.state[`${itemType}`];\n\n\n    if (value === item) {\n      value = ''\n      \n    }\n\n    else if (value.includes(item)) { value = value.filter(element => element !== item) }\n\n    else {\n      (Array.isArray(value) ? (\n        value.push(item)\n      ) : (\n          value = item\n        )\n      )\n    }\n\n    this.setState({\n      [`${itemType}`]: value\n    })\n  }\n\n  handleSubmit = (event) => {\n\n    event.preventDefault()\n    document.getElementById(\"order-form\").reset()\n    this.props.addToOrder(this.state)\n\n   // this.setState({\n    //  ...DEFAULT_STATE\n   // })\n  }\n\n  fillForm = (element, type) => {\n    let status;\n    if (Array.isArray(this.state[type])) {\n      status = this.state[type].includes(element)\n    } else {\n      status = this.state[type] === element\n    }\n    return (<div className=\"field\">\n      <div className=\"ui checkbox\">\n        <input\n          id={element}\n          type=\"checkbox\"\n          value={element}\n          name={type}\n          checked={status}\n          onChange={(e) => this.handleChange(e)}\n        />\n        <img src={require(`../images/cheese/cheese.png`)} height=\"100px\" width=\"100px\" alt={element} />\n        <label htmlFor={element}>{element}</label>\n      </div>\n    </div>)\n  }\n\n  render() {\n    return (\n      <div className=\"ui raised container segment\">\n        <h1 className=\"ui block header\">Create a Pizza</h1>\n        <form className=\"ui form\" id=\"order-form\" onSubmit={this.handleSubmit}>\n          <SizeForm\n            size={this.state.size}\n            fillForm={this.fillForm}\n          />\n\n          <SauceForm\n            sauce={this.state.sauce}\n            fillForm={this.fillForm}\n          />\n\n          <CheeseForm\n            cheese={this.state.cheese}\n            fillForm={this.fillForm}\n          />\n\n          <ToppingForm\n            toppings={this.state.toppings}\n            fillForm={this.fillForm}\n          />\n\n          <GourmetToppingForm\n            gourmet_toppings={this.state.gourmet_toppings}\n            fillForm={this.fillForm}\n          />\n\n          <br />\n\n          <button className=\"ui blue big button\" type=\"submit\">Add Pizza</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default MainForm"]},"metadata":{},"sourceType":"module"}