{"ast":null,"code":"var _jsxFileName = \"/Users/test/Development/Mod-4-proj/SliceLine_Frontend/src/components/MainForm.js\";\nimport React, { Component } from 'react';\nimport SauceForm from './SauceForm';\nimport CheeseForm from './CheeseForm';\nimport ToppingForm from './ToppingForm';\nimport GourmetToppingForm from './GourmetToppingForm';\nimport SizeForm from './SizeForm';\nconst DEFAULT_STATE = {\n  size: '',\n  sauce: '',\n  cheese: '',\n  toppings: [],\n  gourmet_toppings: []\n};\n\nclass MainForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = { ...DEFAULT_STATE\n    };\n\n    this.handleChange = event => {\n      const itemType = event.target.name;\n      const item = event.target.value;\n      let value = this.state[`${itemType}`];\n\n      if (value === item) {\n        value = '';\n      } else if (value.includes(item)) {\n        value = value.filter(element => element !== item);\n      } else {\n        Array.isArray(value) ? value.push(item) : value = item;\n      }\n\n      this.setState({\n        [`${itemType}`]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      document.getElementById(\"order-form\").reset();\n      this.props.addToOrder(this.state, this.props.id);\n      this.setState({ ...DEFAULT_STATE\n      });\n    };\n\n    this.fillForm = (element, type, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ui checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        id: element,\n        type: \"checkbox\",\n        value: element,\n        name: type,\n        checked: Array.isArray(this.state[type]) ? this.state[type].includes(element) : this.state[type] === element,\n        onChange: e => this.handleChange(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        src: require(`../images/${type}/${element}.png`),\n        height: \"100px\",\n        width: \"100px\",\n        alt: element,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: element,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, element)));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui raised container segment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 3\n      }\n    }, \"Create a Pizza\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 3\n      }\n    }, \"Resize this responsive page to see the effect!\")), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"ui form\",\n      id: \"order-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SizeForm, {\n      size: this.state.size,\n      fillForm: this.fillForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(SauceForm, {\n      sauce: this.state.sauce,\n      fillForm: this.fillForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CheeseForm, {\n      cheese: this.state.cheese,\n      fillForm: this.fillForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ToppingForm, {\n      toppings: this.state.toppings,\n      fillForm: this.fillForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(GourmetToppingForm, {\n      gourmet_toppings: this.state['gourmet_toppings'],\n      fillForm: this.fillForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui blue big button\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, \"Add Pizza\")));\n  }\n\n}\n\nexport default MainForm;","map":{"version":3,"sources":["/Users/test/Development/Mod-4-proj/SliceLine_Frontend/src/components/MainForm.js"],"names":["React","Component","SauceForm","CheeseForm","ToppingForm","GourmetToppingForm","SizeForm","DEFAULT_STATE","size","sauce","cheese","toppings","gourmet_toppings","MainForm","state","handleChange","event","itemType","target","name","item","value","includes","filter","element","Array","isArray","push","setState","handleSubmit","preventDefault","document","getElementById","reset","props","addToOrder","id","fillForm","type","index","e","require","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport SauceForm from './SauceForm'\nimport CheeseForm from './CheeseForm'\nimport ToppingForm from './ToppingForm'\nimport GourmetToppingForm from './GourmetToppingForm'\nimport SizeForm from './SizeForm'\n\nconst DEFAULT_STATE = {\n  size: '',\n  sauce: '',\n  cheese: '',\n  toppings: [],\n  gourmet_toppings: []\n}\n\nclass MainForm extends Component {\n\n  state = {\n    ...DEFAULT_STATE\n  }\n\n  handleChange = (event) => {\n\n    const itemType = event.target.name;\n    const item = event.target.value;\n    let value = this.state[`${itemType}`];\n\n    if (value === item) {\n      value = ''\n    }\n    else if (value.includes(item)) { \n      value = value.filter(element => element !== item) \n    }\n    else {\n      (Array.isArray(value) ? (\n        value.push(item)\n      ) : (\n          value = item\n        )\n      )\n    }\n\n    this.setState({\n      [`${itemType}`]: value\n    })\n  }\n\n  handleSubmit = (event) => {\n\n    event.preventDefault()\n    document.getElementById(\"order-form\").reset()\n\n    this.props.addToOrder(this.state, this.props.id)\n\n    this.setState({\n      ...DEFAULT_STATE\n    })\n\n  }\n\n  fillForm = (element, type, index) => {\n\n    return (\n      <div className=\"field\" key={index}>\n        <div className=\"ui checkbox\">\n          <input\n            id={element}\n            type=\"checkbox\"\n            value={element}\n            name={type}\n            checked={Array.isArray(this.state[type]) ? this.state[type].includes(element) :\n              this.state[type] === element}\n            onChange={(e) => this.handleChange(e)}\n          />\n          <img src={require(`../images/${type}/${element}.png`)} height=\"100px\" width=\"100px\" alt={element} />\n          <label htmlFor={element}>{element}</label>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"ui raised container segment\">\n       \n        <div className=\"jumbotron text-center\">\n  <h1>Create a Pizza</h1>\n  <p>Resize this responsive page to see the effect!</p> \n</div>\n        <form className=\"ui form\" id=\"order-form\" onSubmit={this.handleSubmit}>\n          \n          <SizeForm\n            size={this.state.size}\n            fillForm={this.fillForm}\n          />\n\n          <SauceForm\n            sauce={this.state.sauce}\n            fillForm={this.fillForm}\n          />\n\n          <CheeseForm\n            cheese={this.state.cheese}\n            fillForm={this.fillForm}\n          />\n\n          <ToppingForm\n            toppings={this.state.toppings}\n            fillForm={this.fillForm}\n          />\n\n          <GourmetToppingForm\n            gourmet_toppings={this.state['gourmet_toppings']}\n            fillForm={this.fillForm}\n          />\n\n          <br />\n\n          <button className=\"ui blue big button\" type=\"submit\">Add Pizza</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default MainForm"]},"metadata":{},"sourceType":"module"}